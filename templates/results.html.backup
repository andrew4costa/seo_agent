<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SEO Analysis Results</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .progress-container {
            margin: 40px 0;
        }
        .progress {
            height: 30px;
        }
        .recommendations .card {
            margin-bottom: 20px;
            transition: transform 0.3s;
        }
        .recommendations .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        .metric-card {
            border-radius: 10px;
            padding: 20px;
            height: 100%;
            transition: transform 0.3s;
        }
        .metric-card:hover {
            transform: translateY(-5px);
        }
        .metric-value {
            font-size: 2.5rem;
            font-weight: bold;
        }
        .high-impact {
            border-left: 5px solid #dc3545;
        }
        .medium-impact {
            border-left: 5px solid #fd7e14;
        }
        .low-impact {
            border-left: 5px solid #0d6efd;
        }
        .score-circle {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 30px;
            font-size: 3rem;
            font-weight: bold;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .section-title {
            margin-top: 40px;
            margin-bottom: 30px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e9ecef;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">SEO Analyzer</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/my-reports">My Reports</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container my-5">
        <div class="row">
            <div class="col-12">
                <h1 id="result-title">SEO Analysis Results</h1>
                <p id="result-subtitle" class="lead">We're analyzing your website to provide actionable SEO recommendations.</p>

                <div id="progress-section" class="progress-container">
                    <div class="d-flex justify-content-between mb-2">
                        <span id="progress-status">Starting analysis...</span>
                        <span id="progress-percentage">0%</span>
                    </div>
                    <div class="progress">
                        <div id="progress-bar" class="progress-bar progress-bar-striped progress-bar-animated" 
                             role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" 
                             style="width: 0%" data-progress="0"></div>
                    </div>
                    <p id="estimated-time" class="mt-2 text-muted small">Estimating time remaining...</p>
                </div>
                
                <!-- Results section (hidden until analysis is complete) -->
                <div id="results-section" style="display: none;">
                    <!-- Will be populated by JavaScript when data is available -->
                </div>
            </div>
        </div>
    </div>

    <footer class="bg-dark text-light py-4 mt-5">
        <div class="container text-center">
            <p>Â© 2025 SEO Analyzer. All rights reserved.</p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Store the filename from the backend
        const filename = "{{ filename }}";
        
        // Variables to track progress
        let isCompleted = false;
        let checkInterval;
        
        // Function to check analysis progress
        function checkAnalysisProgress() {
            fetch(`/api/progress/${filename}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Update progress bar
                    const progressBar = document.getElementById('progress-bar');
                    const progress = data.progress || 0;
                    progressBar.setAttribute('data-progress', progress);
                    progressBar.style.width = progress + '%';
                    progressBar.setAttribute('aria-valuenow', progress);
                    
                    // Update status text
                    document.getElementById('progress-status').textContent = data.current_step || 'Processing...';
                    document.getElementById('progress-percentage').textContent = `${progress}%`;
                    
                    // Update estimated time if available
                    if (data.estimated_time_remaining) {
                        const minutes = Math.floor(data.estimated_time_remaining / 60);
                        const seconds = data.estimated_time_remaining % 60;
                        document.getElementById('estimated-time').textContent = 
                            `Estimated time remaining: ${minutes}m ${seconds}s`;
                    }
                    
                    // Change progress bar color based on progress
                    if (progress > 75) {
                        progressBar.className = 'progress-bar progress-bar-striped progress-bar-animated bg-success';
                    } else if (progress > 50) {
                        progressBar.className = 'progress-bar progress-bar-striped progress-bar-animated bg-info';
                    } else if (progress > 25) {
                        progressBar.className = 'progress-bar progress-bar-striped progress-bar-animated bg-primary';
                    }
                    
                    // If analysis is complete, get results
                    if (data.status === 'completed' && !isCompleted) {
                        isCompleted = true;
                        getAnalysisResults();
                        clearInterval(checkInterval);
                        
                        // Update UI to show completion
                        document.getElementById('progress-status').textContent = 'Analysis completed!';
                        document.getElementById('estimated-time').textContent = '';
                    }
                    
                    // If analysis failed, show error
                    if (data.status === 'failed') {
                        clearInterval(checkInterval);
                        document.getElementById('progress-status').textContent = 'Analysis failed';
                        document.getElementById('progress-bar').className = 'progress-bar bg-danger';
                        document.getElementById('estimated-time').textContent = data.error || 'Unknown error occurred';
                    }
                })
                .catch(error => {
                    console.error('Error checking progress:', error);
                });
        }
        
        // Function to get analysis results
        function getAnalysisResults() {
            fetch(`/api/results/${filename}`)
                .then(response => {
                    if (!response.ok) {
                        if (response.status === 202) {
                            // Analysis still in progress
                            return null;
                        }
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (!data) return; // Analysis still in progress
                    
                    // Update title and subtitle
                    document.getElementById('result-title').textContent = `SEO Analysis for ${data.url}`;
                    document.getElementById('result-subtitle').textContent = 
                        `Analysis completed on ${new Date(data.date).toLocaleDateString()}`;
                    
                    // Hide progress section and show results
                    document.getElementById('progress-section').style.display = 'none';
                    const resultsSection = document.getElementById('results-section');
                    resultsSection.style.display = 'block';
                    resultsSection.innerHTML = createResultsHTML(data);
                })
                .catch(error => {
                    console.error('Error getting results:', error);
                });
        }
        
        // Function to create results HTML
        function createResultsHTML(data) {
            return `
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h2 class="section-title">Overall Performance</h2>
                    </div>
                    <div class="col-md-3 mb-4">
                        <div class="card metric-card bg-light">
                            <div class="card-body text-center">
                                <h5 class="card-title">Overall Score</h5>
                                <div class="metric-value ${getScoreColorClass(data.overall_score)}">${data.overall_score}</div>
                                <p class="card-text text-muted">out of 100</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-4">
                        <div class="card metric-card bg-light">
                            <div class="card-body text-center">
                                <h5 class="card-title">Pages Analyzed</h5>
                                <div class="metric-value text-primary">${data.pages_analyzed}</div>
                                <p class="card-text text-muted">pages</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-4">
                        <div class="card metric-card bg-light">
                            <div class="card-body text-center">
                                <h5 class="card-title">Page Speed</h5>
                                <div class="metric-value text-primary">${data.performance_metrics.page_speed || 'N/A'}</div>
                                <p class="card-text text-muted">score</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 mb-4">
                        <div class="card metric-card bg-light">
                            <div class="card-body text-center">
                                <h5 class="card-title">Mobile Friendly</h5>
                                <div class="metric-value text-${data.performance_metrics.mobile_friendly ? 'success' : 'danger'}">
                                    ${data.performance_metrics.mobile_friendly ? 'Yes' : 'No'}
                                </div>
                                <p class="card-text text-muted">responsive design</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h2 class="section-title">Recommendations</h2>
                    </div>
                    <div class="col-md-12 recommendations">
                        ${data.recommendations.map(rec => `
                            <div class="card mb-3 ${getImpactClass(rec.impact)}">
                                <div class="card-body">
                                    <h5 class="card-title">${rec.title}</h5>
                                    <p class="card-text">${rec.description}</p>
                                    <div class="d-flex justify-content-between">
                                        <span class="badge bg-${getImpactBadgeColor(rec.impact)}">${rec.impact.toUpperCase()} Impact</span>
                                        <span class="badge bg-secondary">${rec.effort.toUpperCase()} Effort</span>
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h2 class="section-title">Page Insights</h2>
                    </div>
                    ${data.page_insights.map(page => `
                        <div class="col-md-6 mb-4">
                            <div class="card h-100">
                                <div class="card-header">
                                    <h5>${page.url}</h5>
                                </div>
                                <div class="card-body">
                                    <p><strong>Title:</strong> ${page.title}</p>
                                    <p><strong>Meta Description:</strong> ${page.meta_description}</p>
                                    <p><strong>H1:</strong> ${page.h1}</p>
                                    <p><strong>Word Count:</strong> ${page.word_count}</p>
                                    <p><strong>Load Time:</strong> ${page.load_time}s</p>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-12">
                        <h2 class="section-title">Technical Issues</h2>
                    </div>
                    <div class="col-md-12">
                        <div class="list-group">
                            ${data.technical_issues.map(issue => `
                                <div class="list-group-item ${getImpactClass(issue.impact)}">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">${formatIssueType(issue.type)}</h5>
                                        <span class="badge bg-${getImpactBadgeColor(issue.impact)}">${issue.impact.toUpperCase()} Impact</span>
                                    </div>
                                    <p class="mb-1">Found ${issue.count} instances</p>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
            `;
        }
        
        // Helper functions for styling
        function getScoreColorClass(score) {
            if (score >= 80) return 'text-success';
            if (score >= 50) return 'text-warning';
            return 'text-danger';
        }
        
        function getImpactClass(impact) {
            if (impact === 'high') return 'high-impact';
            if (impact === 'medium') return 'medium-impact';
            return 'low-impact';
        }
        
        function getImpactBadgeColor(impact) {
            if (impact === 'high') return 'danger';
            if (impact === 'medium') return 'warning';
            return 'info';
        }
        
        function formatIssueType(type) {
            return type.split('_').map(word => 
                word.charAt(0).toUpperCase() + word.slice(1)
            ).join(' ');
        }
        
        // Start checking progress when page loads
        document.addEventListener('DOMContentLoaded', function() {
            // Check progress immediately
            checkAnalysisProgress();
            
            // Then check every 3 seconds
            checkInterval = setInterval(checkAnalysisProgress, 3000);
        });
    </script>
</body>
</html>